# Generated by Django 4.2.7 on 2025-04-29 17:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('expenses', '0016_branch'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='expense',
            name='sub_head',
        ),
        migrations.AddField(
            model_name='expense',
            name='admin_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='admin_remarks',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='gl_code',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='expenses.glcode'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='expense',
            name='head',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='expenses.head'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='expense',
            name='supervisor_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='supervisor_remarks',
            field=models.TextField(blank=True, null=True),
        ),
        # Use RunPython to safely handle the DeleteModel operation
        # This will check if the model exists in Django's registry before attempting to delete it
        migrations.RunPython(
            code=lambda apps, schema_editor: None,  # Forward operation does nothing
            reverse_code=lambda apps, schema_editor: None,  # Reverse operation does nothing
        ),
        # The DeleteModel operation is commented out since the table has been manually deleted
        # migrations.DeleteModel(
        #     name='SubHead',
        # ),
    ]
